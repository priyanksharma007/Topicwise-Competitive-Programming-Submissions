#include<bits/stdc++.h>

#define MOD 1e9+7


using namespace std;

set<int> st;

void dfs(int s, vector<int> &a, vector<int> &visited, vector<int> adj[], int &m, int cats) {
	if (cats > m) return;
	if (visited[s]) return;
	visited[s] = 1;
	int isLeaf = 1;
	for (auto u : adj[s]) {
		if (visited[u] == 0) {
			isLeaf = 0;
			break;
		}
	}
	if (a[s]) {
		cats++;
	} else if (a[s] == 0 && isLeaf == 0	) {
		cats = 0;
	}
	// cout << "visiting " << s + 1  << " with cats " << cats << endl;


	if (isLeaf && cats <= m) {
		// cout << " hi";
		st.insert(s);
	}
	// process node s
	for (auto u : adj[s]) {
		dfs(u, a, visited, adj, m, cats);
	}

}

void solve()
{
	int n, m;
	cin >> n >> m;

	vector<int> a(n);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}

	vector<int> adj[n];

	for (int i = 0; i < n - 1; i++) {
		int x, y;
		cin >> x >> y;
		// cout << x << " " << y << endl;
		adj[x - 1].push_back(y - 1);
		adj[y - 1].push_back(x - 1);
	}

	vector<int> visited(n, 0);

	int cats = 0;
	dfs(0, a, visited, adj, m, cats);



	cout << st.size();
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t = 1;
	// cin >> t;

	while (t--) {
		solve();
	}


}